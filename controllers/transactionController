// Dependencies
const express = require('express')
let transactionsArray = require('../models/transactions')
const transactions = express.Router()
const { nanoid } = require('nanoid')
const { validateAmount, validateNameAndSource } = require('../validation/transactionValidation')

// Read
transactions.get('/', (req, res) => {
    res.status(200).json(transactionsArray)
})

// Show
transactions.get('/:id', (req, res) => {
    const { id } = req.params;
    const objectFound = transactionsArray.find(transaction => transaction.id === id)

    objectFound ? res.status(200).json(objectFound) : res.redirect('/error')
})

// Create
transactions.post('/', (req, res) => {
    req.body.id = nanoid(5)
    transactionsArray.push(req.body)
    res.status(200).json(transactionsArray[transactionsArray.length - 1])
})

// Update 
transactions.put('/:id', validateNameAndSource, validateAmount, (req, res) => {
    const { id } = req.params
    const index = transactionsArray.findIndex(transaction => transaction.id === id)

    if(!transactionsArray[index]) res.redirect('/error')

    req.body.id = id
    transactionsArray[index] = req.body

    res.status(200).json(transactionsArray[index])
})

// Delete
transactions.delete('/:id', (req, res) => {
    const { id } = req.params;
    const objectFound = transactionsArray.find(transaction => transaction.id === id)
    objectFound ? transactionsArray = transactionsArray.filter(transaction => transaction.id !== id) : res.redirect('/error')
        

    res.status(200).json({message: 'Transaction removed'})
})




module.exports = transactions
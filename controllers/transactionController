// Dependencies
const express = require('express')
const transactionsArray = require('../models/transactions')
const transactions = express.Router()
const { nanoid } = require('nanoid')

// Read
transactions.get('/', (req, res) => {
    res.status(200).json(transactionsArray)
})

// Show
transactions.get('/:index', (req, res) => {
    const { index } = req.params;
    transactionsArray[index] ? res.status(200).json(transactionsArray[index]) : res.redirect('/error')
})

// Create
transactions.post('/', (req, res) => {
    req.body.id = nanoid(5)
    transactionsArray.push(req.body)
    res.status(200).json(transactionsArray[transactionsArray.length - 1])
})

// Update 
transactions.put('/:index', (req, res) => {
    const { index } = req.params
    if(!transactionsArray[index]) res.redirect('/error')

    const transactionId = transactionsArray[index].id
    req.body.id = transactionId
    transactionsArray[index] = req.body

    res.status(200).json(transactionsArray[index])
})

// Delete
transactions.delete('/:index', (req, res) => {
    const { index } = req.params;
    if(!transactionsArray[index]) res.redirect('/error')
        
    transactionsArray.splice(index, 1)
    res.status(200).json({message: 'Transaction removed'})
})




module.exports = transactions